#December 2021 Problem #1
#N = int(input())
#NString = input()
N = 5
NString = "GHGHG"

index = 0
count = 0
for i in range(3,N+1):
  while index<=N:
    if NString[index:index+i].count("G") or NString[index:index+i].count("H") == 1:
      if len(NString[index:index+i]) == i:
        count+=1
    index += 1
print(count)

#December 2021 Problem 2
#N = int(input())
#p = input().split()
#t = input().split()
N = 5
p = "1 5 3 3 4"
P = []
for x in p.split():
  P.append(int(x))
t = "1 2 2 2 1"
T = []
for x in t.split():
  T.append(int(x))

#P - end - [1, 5, 3, 3, 4]
#T - current - [1, 2, 2, 2, 1]
D = []
for i in range(N):
  D.append(P[i] - T[i])

#[1, 2, 3, 2, 1] T
#[0, 3, 1, 1, 3] D
#[1, 5, 3, 3, 4] P
start = 0
end = 0
for i in range(len(D)):
  for j in range(i+1, len(D)-i):
    pass

#iterate through D, get portion of D where all numbers are positive. Add 1 to T X times, where X is the greatest value in that portion of D. Keep on remaking D. If there are still positive numbers in the sequence, repeat again. If all values in D 0, stop. All of the values of D, if not 0, should be negative now. Then do the same thing, but subtract 1 to T X times, where X is the greatest value in that portion of D.

#February 2018 Question 1

#N = input().split()
N = "3 10 8 2"
for x in N:
  a = int(N[0])
  b = int(N[1])
  x = int(N[2])
  y = int(N[3])
d = []
d.append(abs(a-b))
d.append(abs(a-x) + abs(y-b))
d.append(abs(a-y) + abs(x-b))

print(min(d))










  




  



  
  
